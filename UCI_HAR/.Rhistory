mergeDataMeanStd_descriptive <- join(mergeData_mean_std,activityLabels, by = "activityId",match = "first")
library(dplyr)
mergeDataMeanStd_descriptive <- join(mergeData_mean_std,activityLabels, by = "activityId",match = "first")
library(dplyr)
mergeDataMeanStd_descriptive <- join(mergeData_mean_std,activityLabels, by = "activityId",match = "first")
?join
mergeDataMeanStd_descriptive <- inner_join(mergeData_mean_std,activityLabels, by = "activityId",match = "first")
View(mergeDataMeanStd_descriptive)
mergeDataMeanStd_descriptive <- inner_join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
nms<- names(mergeDataMeanStd_descriptive)
nms
gsub("\\( | \\)","",nms,perl = TRUE)
gsub("\\(|\\)","",nms,perl = TRUE)
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
install.packages("gsubfn")
library(gsubfn)
gsubfn(c('Acc','GyroJerk','Gyro','Mag','^t','^f','\\.mean','\\.std','Freq\\.','Freq$'),c('Acceleration','AngularAcceleration','AngularSpeed','Magnitute','Time','Frequency','.Mean','.StandardDeviation','Frequency.','Frequency'),nms)
nms<-gsub("\\(|\\)","",nms,perl = TRUE)
nms
gsubfn(c('Acc','GyroJerk','Gyro','Mag','^t','^f','\\.mean','\\.std','Freq\\.','Freq$'),c('Acceleration','AngularAcceleration','AngularSpeed','Magnitute','Time','Frequency','.Mean','.StandardDeviation','Frequency.','Frequency'),nms)
gsub(".",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn(".",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn('mean','Mean',nms)
gsubfn(c('mean','Gyro'),c('Mean','Gyroscope',nms)
)
gsubfn(c('mean','Gyro'),c('Mean','Gyroscope'),nms)
gsubfn('.',list('mean' == 'Mean','Gyro' == 'Gyroscope'),nms)
gsubfn(".",list('mean' == 'Mean','Gyro' == 'Gyroscope'),nms)
gsubfn(".",list('mean' == 'Mean','Gyro' == 'Gyroscope'),nms)
gsubfn(".",list('mean' = 'Mean','Gyro' = 'Gyroscope'),nms)
gsubfn(".",list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn(list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn("",list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn(".",list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn(".",list("\\mean" = "Mean","\\Gyro" = "Gyroscope"),nms)
gsubfn(".",list("\\mean\\" = "Mean","\\Gyro\\" = "Gyroscope"),nms)
gsubfn( ,list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn( '',list("mean" = "Mean","Gyro" = "Gyroscope"),nms)
gsubfn( ,list('.mean' = 'Mean','.Gyro' = '.Gyroscope'),nms)
gsubfn( 'Gyro' , 'Gyroscope',nms)
gsubfn( list('Gyro','mean') , list('Gyroscope','Mean'),nms)
gsubfn( ".",list(mean = "Mean",gyro = "Gyroscope"),nms)
gsubfn( ".",list(mean = "Mean",gyro = "Gyroscope"),'Gyromean')
gsubfn( ".",list(mean = "Mean",gyro = "Gyroscope"),'Gyro-mean')
gsubfn( ".",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn( ".",list(mean == "Mean",gyro == "Gyroscope"),"Gyro-mean")
gsubfn( ".",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn(".m", list(cm = "e1", km = "e6"), "33cm 45km")
gsubfn( "..",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn( "m.",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn( "//.",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn( ".//",list(mean = "Mean",gyro = "Gyroscope"),"Gyro-mean")
gsubfn(".", list(Gyro = "Gyroscope", mean = "Mean"), "Gyro22 mean44")
gsubfn(".m", list(cm = "e1", km = "e6"), "33cm 45km")
gsubfn(".", list(cm = "e1", km = "e6"), "33cm 45km")
gsubfn(".m", list(cm = "e1", km = "e6"), "33cmp 45kmp")
gsubfn(".m", list(cm = "e1", km = "e6"), "33cmp 45kp")
gsubfn(".m", list(cm = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".p", list(cm = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".k", list(cm = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".m", list(cm = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".m", list(cmp = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".m", list(cm = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".m", list(c = "e1", k = "e6"), "33cmp 45kmp")
gsubfn(".", list("á"="a", "é"="e", "ó"="o"), "óéá)
)
)
gsubfn(".", list("á"="a", "é"="e", "ó"="o"), "óéá")
gsubfn(".*",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn("*.*",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn("*.",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn(".*",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nms)
gsubfn(".*",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nms)
gsubfn(".-",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nms)
gsubfn(".n",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn(".*n",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn((.*),list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn(".*+.",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)+.",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)+.+(.*)",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)+(.*)",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed",mean = "Mean"),nms)
gsubfn("(.*)",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed","mean" = "Mean"),nms)
gsubfn(".",c('Acc','GyroJerk','Gyro','Mag','^t','^f','\\.mean','\\.std','Freq\\.','Freq$'),
c('Acceleration','AngularAcceleration','AngularSpeed','Magnitute','Time','Frequency',
'.Mean','.StandardDeviation','Frequency.','Frequency'),nms)
gsubfn(".",list(c('Acc','GyroJerk','Gyro','Mag','^t','^f','\\.mean','\\.std','Freq\\.','Freq$')),
list(c('Acceleration','AngularAcceleration','AngularSpeed','Magnitute','Time','Frequency','.Mean','.StandardDeviation','Frequency.','Frequency')),nms)
gsubfn(".",list(c('Acc','GyroJerk','Gyro','Mag','^t','^f','\\.mean','\\.std','Freq\\.','Freq$'),
c('Acceleration','AngularAcceleration','AngularSpeed','Magnitute','Time','Frequency','.Mean','.StandardDeviation','Frequency.','Frequency')),nms)
nam <- make.names(names(mergeDataMeanStd_descriptive))
nam
gsubfn(".*",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nam)
gsubfn(".",list("Acc" = "Acceleration","GyroJerk" = "AngularAcceleration","Gyro" = "AngularSpeed"),nam)
gsubfn(".",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nam)
gsubfn(".//.",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nam)
gsubfn("(.*)//.",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nam)
gsubfn("(.*)//.",list(Acc = "Acceleration",GyroJerk = "AngularAcceleration",Gyro = "AngularSpeed"),nms)
names(mergeDataMeanStd_descriptive) <- gsub('Acc',"Acceleration",names(mergeDataMeanStd_descriptive))
nms <-names(mergeDataMeanStd_descriptive)
nms
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
nms <-names(mergeDataMeanStd_descriptive)
nms
ergeDataMeanStd_descriptive <- inner_join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive)
library(dplyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
trainX <- read.table('train/X_train.txt', header = FALSE) #read training x- data
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE) # read the trainig subject file
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
trainData <- cbind(trainY,trainSubject,trainX)
testX <- read.table('test/X_test.txt', header = FALSE) #read test x- data
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE) # read the test subject file
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
testData <- cbind(testY,testSubject,testX)
mergedData <- rbind(trainData, testData)
# extract the mean and std and ...
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
mergeDataMeanStd_descriptive <- inner_join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
nms <- names(mergeDataMeanStd_descriptive)
nms <- gsub('Acc',".Acceleration",nms)
nms <- gsub('GyroJerk',"AngularAcceleration",nms)
nms <- gsub('Gyro',"AngularSpeed",nms)
nms <- gsub('Mag',"Magnitude",nms)
nms <- gsub('^t',"TimeDomain.",nms)
nms <- gsub('^f',"FrequencyDomain.",nms)
nms <- gsub('\\.mean',".Mean",nms)
nms <- gsub('\\.std',".StandardDeviation",nms)
nms <- gsub('Freq\\.',"Frequency.",nms)
nms <- gsub('Freq$',"Frequency",nms)
nms
nms <- names(mergeDataMeanStd_descriptive)
nms <- names(mergeDataMeanStd_descriptive)
nms
gsubfn('.',list('Acc' = "Acceleration",'GyroJerk' = "AngularAcceleration",'Gyro' = "AngularSpeed"),nam)
nms <- names(mergeDataMeanStd_descriptive)
nms <- gsub('Body',"",nms)
nms
nms <- gsub('^t',"Time.",nms)
nms
nms <- gsub('^f',"Frequency.",nms)
nms
nms <- names(mergeDataMeanStd_descriptive)
nms <- gsub('Body',"",nms)
#nms <- gsub('Acc',".Acceleration",nms)
nms <- gsub('GyroJerk',"GyroscopicAcceleration",nms)
nms <- gsub('Gyro',"GyroscopicSpeed",nms)
nms <- gsub('Mag',"Magnitude",nms)
nms <- gsub('^t',"Time.",nms)
nms <- gsub('^f',"Frequency.",nms)
nms <- gsub('\\.mean',".Mean",nms)
nms <- gsub('\\.std',".StandardDeviation",nms)
nms <- gsub('Freq\\.',"Frequency.",nms)
nms <- gsub('Freq$',"Frequency",nms)
nms
nms <- names(mergeDataMeanStd_descriptive)
nms <- gsub('Body',"",nms)
nms <- gsub('Acc',".Acceleration",nms)
nms <- gsub('GyroJerk',"GyroscopicAcceleration",nms)
nms <- gsub('Gyro',"GyroscopicSpeed",nms)
nms <- gsub('Mag',"Magnitude",nms)
nms <- gsub('^t',"Time.",nms)
nms <- gsub('^f',"Frequency.",nms)
nms <- gsub('\\.mean',".Mean",nms)
nms <- gsub('\\.std',".StandardDeviation",nms)
nms <- gsub('Freq\\.',"Frequency.",nms)
nms <- gsub('Freq$',"Frequency",nms)
nms
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
library(plyr)
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityId"),numcolwise(mean))
View(mergeDataMeanStd_descriptive2)
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
head(tidy)
dim(tidy)
tidy[1:5,1:5]
tidy[1:10,1:4]
# Assignment: Getting and Cleaning Data Course Project
#1.   Merges the training and the test sets to create one data set.
#2.   Extracts only the measurements on the mean and standard deviation for each measurement.
#3.   Uses descriptive activity names to name the activities in the data set
#4.   Appropriately labels the data set with descriptive variable names.
#5.   From the data set in step 4, creates a second, independent tidy data set with
#       the average of each variable for each activity and each subject.
library(dplyr)
library(plyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
trainX <- read.table('train/X_train.txt', header = FALSE) #read training x- data
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE) # read the trainig subject file
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
trainData <- cbind(trainY,trainSubject,trainX)
testX <- read.table('test/X_test.txt', header = FALSE) #read test x- data
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE) # read the test subject file
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
testData <- cbind(testY,testSubject,testX)
mergedData <- rbind(trainData, testData)
# extract the mean and std and ...
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
mergeDataMeanStd_descriptive <- inner_join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
write.table(tidy, file = "tidydata_mean.txt")
getwd()
# Assignment: Getting and Cleaning Data Course Project
#1.   Merges the training and the test sets to create one data set.
#2.   Extracts only the measurements on the mean and standard deviation for each measurement.
#3.   Uses descriptive activity names to name the activities in the data set
#4.   Appropriately labels the data set with descriptive variable names.
#5.   From the data set in step 4, creates a second, independent tidy data set with
#       the average of each variable for each activity and each subject.
#load required libraries
library(plyr); #library(dplyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
#read train data
trainX <- read.table('train/X_train.txt', header = FALSE)
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE)
# assign required names to col names
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
# make the combined train data
trainData <- cbind(trainY,trainSubject,trainX)
#read test data
testX <- read.table('test/X_test.txt', header = FALSE)
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE)
#assign required names to cols
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
# make the combined test data
testData <- cbind(testY,testSubject,testX)
#merge test and train data
mergedData <- rbind(trainData, testData)
# extract the mean and std cols from merge data
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
#use the descriptive activity names in the merged data set
mergeDataMeanStd_descriptive <- inner_join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
#clean the column names
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
# create a new copy of the final merged data
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
#creates a second, independent tidy data set with the average of each variable for each
#activity and each subject.
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
#save it to a file
write.table(tidy, file = "tidydata_mean.txt")
# Assignment: Getting and Cleaning Data Course Project
#1.   Merges the training and the test sets to create one data set.
#2.   Extracts only the measurements on the mean and standard deviation for each measurement.
#3.   Uses descriptive activity names to name the activities in the data set
#4.   Appropriately labels the data set with descriptive variable names.
#5.   From the data set in step 4, creates a second, independent tidy data set with
#       the average of each variable for each activity and each subject.
#load required libraries
library(plyr); #library(dplyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
#read train data
trainX <- read.table('train/X_train.txt', header = FALSE)
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE)
# assign required names to col names
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
# make the combined train data
trainData <- cbind(trainY,trainSubject,trainX)
#read test data
testX <- read.table('test/X_test.txt', header = FALSE)
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE)
#assign required names to cols
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
# make the combined test data
testData <- cbind(testY,testSubject,testX)
#merge test and train data
mergedData <- rbind(trainData, testData)
# extract the mean and std cols from merge data
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
#use the descriptive activity names in the merged data set
mergeDataMeanStd_descriptive <- join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
#clean the column names
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
# create a new copy of the final merged data
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
#creates a second, independent tidy data set with the average of each variable for each
#activity and each subject.
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
#save it to a file
write.table(tidy, file = "tidydata_mean.txt")
rm(list = ls())
# Assignment: Getting and Cleaning Data Course Project
#1.   Merges the training and the test sets to create one data set.
#2.   Extracts only the measurements on the mean and standard deviation for each measurement.
#3.   Uses descriptive activity names to name the activities in the data set
#4.   Appropriately labels the data set with descriptive variable names.
#5.   From the data set in step 4, creates a second, independent tidy data set with
#       the average of each variable for each activity and each subject.
#load required libraries
library(plyr); #library(dplyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
#read train data
trainX <- read.table('train/X_train.txt', header = FALSE)
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE)
# assign required names to col names
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
# make the combined train data
trainData <- cbind(trainY,trainSubject,trainX)
#read test data
testX <- read.table('test/X_test.txt', header = FALSE)
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE)
#assign required names to cols
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
# make the combined test data
testData <- cbind(testY,testSubject,testX)
#merge test and train data
mergedData <- rbind(trainData, testData)
# extract the mean and std cols from merge data
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
#use the descriptive activity names in the merged data set
mergeDataMeanStd_descriptive <- join(activityLabels,mergeData_mean_std, by = "activityId",match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
#clean the column names
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
# create a new copy of the final merged data
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
#creates a second, independent tidy data set with the average of each variable for each
#activity and each subject.
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
#save it to a file
write.table(tidy, file = "tidydata_mean.txt")
View(tidy)
#use the descriptive activity names in the merged data set
mergeDataMeanStd_descriptive <- join(activityLabels,mergeData_mean_std, by = "activityId")#,match = "first")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
#clean the column names
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
# create a new copy of the final merged data
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
#creates a second, independent tidy data set with the average of each variable for each
#activity and each subject.
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
dim(tidy)
rm(list = ls())
# Assignment: Getting and Cleaning Data Course Project
#1.   Merges the training and the test sets to create one data set.
#2.   Extracts only the measurements on the mean and standard deviation for each measurement.
#3.   Uses descriptive activity names to name the activities in the data set
#4.   Appropriately labels the data set with descriptive variable names.
#5.   From the data set in step 4, creates a second, independent tidy data set with
#       the average of each variable for each activity and each subject.
#load required libraries
library(plyr); #library(dplyr)
# reading all the data to the workspace
activityLabels <- read.table('activity_labels.txt',header = FALSE) # read activity names
names(activityLabels)<- c("activityId", "activityName")
features <- read.table('features.txt', header = FALSE) #read the feature list
names(features) <- c("featureId","featureName")
#read train data
trainX <- read.table('train/X_train.txt', header = FALSE)
trainY <- read.table('train/y_train.txt')
trainSubject <- read.table("./train/subject_train.txt", header = FALSE)
# assign required names to col names
names(trainSubject) <- c("subjectId")
names(trainY) <- c("activityId")
names(trainX) <- features[,2]
# make the combined train data
trainData <- cbind(trainY,trainSubject,trainX)
#read test data
testX <- read.table('test/X_test.txt', header = FALSE)
testY <- read.table('test/y_test.txt')
testSubject <- read.table("./test/subject_test.txt", header = FALSE)
#assign required names to cols
names(testSubject) <- c("subjectId")
names(testY) <- c("activityId")
names(testX) <- features[,2]
# make the combined test data
testData <- cbind(testY,testSubject,testX)
#merge test and train data
mergedData <- rbind(trainData, testData)
# extract the mean and std cols from merge data
mergeData_mean_std <- mergedData[,grepl("mean|std|subjectId|activityId",names(mergedData))]
#use the descriptive activity names in the merged data set
mergeDataMeanStd_descriptive <- join(activityLabels,mergeData_mean_std, by = "activityId")
mergeDataMeanStd_descriptive <- mergeDataMeanStd_descriptive[,-1]
#clean the column names
names(mergeDataMeanStd_descriptive) <- gsub("\\(|\\)","",names(mergeDataMeanStd_descriptive),perl = TRUE)
names(mergeDataMeanStd_descriptive) <- make.names(names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Acc',".Acceleration",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Mag',"Magnitude",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^t',"TimeDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('^f',"FrequencyDomain.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.mean',".Mean",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('\\.std',".StandardDeviation",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq\\.',"Frequency.",names(mergeDataMeanStd_descriptive))
names(mergeDataMeanStd_descriptive) <- gsub('Freq$',"Frequency",names(mergeDataMeanStd_descriptive))
# create a new copy of the final merged data
mergeDataMeanStd_descriptive2 <- mergeDataMeanStd_descriptive
#creates a second, independent tidy data set with the average of each variable for each
#activity and each subject.
tidy<- ddply(mergeDataMeanStd_descriptive2,c("subjectId","activityName"),numcolwise(mean))
#save it to a file
write.table(tidy, file = "tidydata_mean.txt")
q()
